@model IPagedList<webblog.Models.blogpost>
@using PagedList
@using PagedList.Mvc

<!-- Page Content -->
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-9 well">
                @if (Model.Count == 0)
                {
                    <h4>No Posts found</h4>
                }
                @foreach (var post in Model)
                {
                    <div class="col-lg-12 blogpost">
                        <h2>
                            <a href="@Url.Action("Details", new { slug = post.Slug })">@post.Title</a>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                            {
                                @: <small style="font-size: 40%">[ <a href="@Url.Action("Edit", new { post.Id })">Edit</a> ]</small>
                                @: <small style="font-size: 40%">[ <a href="@Url.Action("Delete", new { post.Id })">Delete</a> ]</small>
                            }
                        </h2>
                        <h5>
                            <i class="fa fa-clock-o"></i> @post.Created.ToString("D")
                            <span style="display:inline-block; width: 1em;"></span>
                            <i class="fa fa-tags"></i> <a href="@Url.Action("Index", "blogposts", new { query = post.Category })">@post.Category</a>
                            <span style="display:inline-block; width: 1em;"></span>
                            <i class="fa fa-comments"></i> <a href="@Url.Action("Details", new { slug = post.Slug })#comments">@post.Comments.Count Comments</a>
                        </h5> 
                        <hr class="defaulthr">
                            @if (post.MediaURL != null)
                            {
                                <a href="@Url.Action("Details", new { slug = post.Slug })"><img src="@Url.Content(post.MediaURL)" class="img-responsive" /></a>
                                <hr class="defaulthr">
                            }
                            
                        <p>@Html.Raw((post.Body.Length > 200 ? post.Body.Substring(0, 200) : post.Body))</p>
                        <input type="button" value="Read More" class="btn btn-primary" onclick="location.href='@Url.Action("Details", "blogposts", new { slug = post.Slug })';return false;">
                        <hr class="defaulthr">
                    </div>   
                }
                <div class="text-center">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, ViewBag.query }))
                </div>
            </div>

            <!-- Blog Sidebar Widgets Column -->
            <div class="col-md-3 hidden-xs hidden-sm">
                <!-- Blog Search Well -->
                <div class="well">
                    <form action="@Url.Action("Index", "blogposts")">
                        <div class="input-group">
                            <input type="text" class="form-control" name="query" value="@ViewBag.query" placeholder="Search ...">
                            <span class="input-group-btn">
                                <button class="btn btn-primary" type="submit" style="color: #222">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>
                            </span>
                        </div>
                    </form>
                    <!-- /.input-group -->
                </div>

                <!-- Tags Categories Well -->
                <div class="well">
                    <h5><i class="fa fa-tags"></i> Tags</h5>
                    <div class="row">
                        <div class="col-lg-12">
                            <ul class="list-unstyled">
                                @{ 
                                    foreach (var category in ViewBag.categorylist)
                                    {
                                        <li><a href="@Url.Action("Index", "blogposts", new { query = category })">@category</a></li>
                                    }
                                }

                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!-- /.row -->
</div>
<!-- /.container -->