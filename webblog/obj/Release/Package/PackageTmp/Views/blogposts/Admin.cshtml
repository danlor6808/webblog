@model IEnumerable<webblog.Models.blogpost>

@helper Truncate(string input, int length)
{
    if (input.Length <= length)
    {
            @input
    }
    else
    {
            @input.Substring(0, length)<text>...</text>
    }
}

<div class="container">
    <div class="row">
        <div class="col-md-10 col-md-offset-1 well">
            <h4 class="text-center">Admin</h4>
            <h6 style="text-align:right">
                @Html.ActionLink("Create New Post", "Create")
            </h6>
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Created)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Updated)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Slug)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Body)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MediaURL)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Published)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Comments)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.Reverse())
                {
                    <tr>
                        <td>
                            @item.Created.ToString("d")
                        </td>
                        <td>
                            @if (item.Updated.HasValue) { @item.Updated.Value.ToString("d") }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Slug)
                        </td>
                        <td>
                            @Html.Raw(Truncate(item.Body, 100))
                        </td>
                        <td>
                            @if (item.MediaURL != null)
                {
                                <div style="width:100%">
                                    <img src="@Url.Content(item.MediaURL)" style="width:100%" />
                                </div>
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Published)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Comments.Count)
                        </td>
                        <td>
                            <ul class="list-unstyled">
                                <li>@Html.ActionLink("Edit", "Edit", new { id = item.Id })</li>
                                <li>@Html.ActionLink("Details", "Details", new { Slug = item.Slug })</li>
                                <li>@Html.ActionLink("Delete", "Delete", new { id = item.Id })</li>
                            </ul>
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
</div>
