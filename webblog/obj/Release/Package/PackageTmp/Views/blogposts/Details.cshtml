@model webblog.Models.blogpost
@using Microsoft.AspNet.Identity

<!-- Page Content -->
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-9">
                <!-- Blog Post Content Column -->
                <div class="col-lg-12 blogpost well">
                    <h2>@Model.Title
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                        {
                            @: <small style="font-size: 40%">[ <a href="@Url.Action("Edit", new { Model.Id })">Edit</a> ]</small>
                                @: <small style="font-size: 40%">[ <a href="@Url.Action("Delete", new { Model.Id })">Delete</a> ]</small>
                            }
                    </h2>

                    <h5>
                        <i class="fa fa-pencil"></i> Posted by Danny Lorn 
                        <span style="display:inline-block; width: 1em;"></span>
                        <i class="fa fa-clock-o"></i> @Model.Created.ToString("D")
                        <span style="display:inline-block; width: 1em;"></span>
                        <i class="fa fa-comments"></i> <a href="#comments">@Model.Comments.Count Comments</a>
                    </h5> 

                    <hr class="defaulthr" />

                    @if (Model.MediaURL != null)
                    {
                        <img src = "@Url.Content(Model.MediaURL)" class="img-responsive" />
                        <hr class="defaulthr">
                    }

                    <p>@Html.Raw(@Model.Body)</p>
                    <hr class="defaulthr" />

                    @Html.ActionLink("Back to List", "Index")
                    
                </div>

                <div class="col-lg-12 blogpost" id="comments" style="padding:0">
                    <!-- Blog Comments -->
                    @if (User.Identity.IsAuthenticated)
                    {
                        <!-- Comments Form -->
                        using (Html.BeginForm("CreateComment", "blogposts", FormMethod.Post))
                        {
                        @Html.AntiForgeryToken()
                        <div class="well">
                            <h4>Leave a Comment:</h4>
                            <!--<form role="form" action="">-->
                            <div class="form-group">
                                <input type="hidden" name="PostId" value="@Model.Id" />
                                <input type="hidden" name="slug" value="@Model.Slug" />
                                <textarea class="form-control" required data-validation-required-message="Please enter your message" rows="3" name="Body"></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <!--</form>-->
                        </div>
                        }
                    }
                    else
                    {
                        <h4 class="text-center">You must be logged in to make comments.</h4>
                     }
                    <hr class="defaulthr">

                    @foreach (var comment in Model.Comments.Reverse())
                    {
                        <div class="media">
                            <div class="commentIcon pull-left text-center">
                                <a href="#">
                                    <img class="media-object" src="~/img/blog/100x100.png" alt="">
                                </a>
                                
                                @if (Request.IsAuthenticated && User.Identity.GetUserId() == comment.AuthorId)
                                {

                                   @: <small>[ <a href="@Url.Action("EditComment", "blogposts", new { id = comment.Id, slug = Model.Slug })">Edit</a> ] </small>
                                }
                                @if (Request.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Moderator")))
                                {
                                   @:<small>[ <a href="@Url.Action("DeleteComment", "blogposts", new { id = comment.Id, slug = Model.Slug })">Delete</a> ] </small>
                                }
                            </div>
                            <div class="media-body">
                                <h4 class="media-heading">
                                    <small>
                                       Commented by @Html.Raw(comment.Author.DisplayName) on 
                                        @Html.Raw(comment.Created.ToString("D"))
                                    </small>
                                </h4>
                                @Html.Raw(comment.Body)
                                @if (comment.Updated != null)
                                {
                                    <h6><em>This comment has been edited on @Html.Raw(comment.Updated.Value.ToString("D"))</em></h6>
                                }
                            </div>
                        </div>
                        <hr class="defaulthr">
                    }
                </div>
            </div>

            <!-- Blog Sidebar Widgets Column -->
            <div class="col-md-3 hidden-xs hidden-sm">
                <!-- Blog Search Well -->
                <div class="well">
                    <h4>Blog Search</h4>
                    <form action="@Url.Action("Index", "blogposts")">
                        <div class="input-group">
                            <input type="text" class="form-control" name="query" value="@ViewBag.query" placeholder="Search ...">
                            <span class="input-group-btn">
                                <button class="btn btn-primary" type="submit" style="color: #222">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>
                            </span>
                        </div>
                    </form>
                    <!-- /.input-group -->
                </div>

                <!-- Tags Categories Well -->
                <div class="well">
                    <h4><i class="fa fa-tags"></i> Tags</h4>
                    <div class="row">
                        <div class="col-lg-12">
                            <ul class="list-unstyled">
                                @{
                                    foreach (var category in ViewBag.categorylist)
                                    {
                                        <li><a href="@Url.Action("Index", "blogposts", new { query = category })">@category</a></li>
                                    }
                                }

                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!-- /.row -->
</div>
<!-- /.container -->